// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThePetShopApp.Data;

#nullable disable

namespace ThePetShopApp.Migrations
{
    [DbContext(typeof(AnimalContext))]
    [Migration("20220824082355_AddListOfCommentsToAnimal")]
    partial class AddListOfCommentsToAnimal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ThePetShopApp.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AnimalId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AnimalList");
                });

            modelBuilder.Entity("ThePetShopApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("CategoryList");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Reptile"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Mammal"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Bird"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Insect"
                        });
                });

            modelBuilder.Entity("ThePetShopApp.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("CommentTxt")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CommentId");

                    b.HasIndex("AnimalId");

                    b.ToTable("CommentList");
                });

            modelBuilder.Entity("ThePetShopApp.Models.Animal", b =>
                {
                    b.HasOne("ThePetShopApp.Models.Category", "Categories")
                        .WithMany("Animals")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("ThePetShopApp.Models.Comment", b =>
                {
                    b.HasOne("ThePetShopApp.Models.Animal", "Animal")
                        .WithMany("Comments")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("ThePetShopApp.Models.Animal", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ThePetShopApp.Models.Category", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
